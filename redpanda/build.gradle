import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerRemoveImage

plugins {
    id 'base'
    id 'com.bmuschko.docker-remote-api' version '7.1.0'
}

String image = project.property('redpanda.image')

def dockerfileDir = project.layout.buildDirectory.dir('prepareDocker')
def imageIdFile = project.layout.buildDirectory.file('.docker/imageId.txt').get().asFile
def imageId = imageIdFile.exists() ? imageIdFile.text : null

def prepareDocker = project.tasks.register('prepareDocker', Sync) {
    it.from 'src/main/docker/Dockerfile'
    it.into dockerfileDir
}

def buildImage = project.tasks.register('buildImage', DockerBuildImage) {
    it.dependsOn prepareDocker
    it.inputDir.set dockerfileDir
    it.imageIdFile.set imageIdFile
    it.images.add(image)
}

def deleteImage = project.tasks.register('deleteImage', DockerRemoveImage) {
    it.onlyIf { imageId != null }
    it.imageId.set imageId
    it.force.set true
    it.onError { exception ->
        if (!exception.message.contains('No such image'))
            throw exception
    }
    it.doLast {
        imageIdFile.delete()
    }
}

def pushImage = project.tasks.register('pushImage', DockerPushImage) {
    DockerBuildImage buildImageTask = buildImage.get()
    it.dependsOn buildImageTask
    it.inputs.files buildImageTask.outputs.files
    it.images.add(image)
}

assemble.dependsOn buildImage
